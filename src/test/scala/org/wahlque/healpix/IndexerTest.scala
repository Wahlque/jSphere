package org.wahlque.healpix

import org.scalatest.FunSuite

import org.wahlque.sphere.healpix.Indexer.{ all, ringByRind, pxirByRind }

class IndexerTestSuite extends FunSuite {

  test("Funtion all") {
    assert(all(0) == 12)
    assert(all(1) == 48)
    assert(all(2) == 192)
  }

  test("Funtion ringByRind at level 0") {
    assert(ringByRind(0, 0) == 1)
    assert(ringByRind(0, 1) == 1)
    assert(ringByRind(0, 2) == 1)
    assert(ringByRind(0, 3) == 1)
    assert(ringByRind(0, 4) == 2)
    assert(ringByRind(0, 5) == 2)
    assert(ringByRind(0, 6) == 2)
    assert(ringByRind(0, 7) == 2)
    assert(ringByRind(0, 8) == 3)
    assert(ringByRind(0, 9) == 3)
    assert(ringByRind(0, 10) == 3)
    assert(ringByRind(0, 11) == 3)
  }

  test("Funtion ringByRind at level 1") {
    assert(ringByRind(1, 0) == 1)
    assert(ringByRind(1, 1) == 1)
    assert(ringByRind(1, 2) == 1)
    assert(ringByRind(1, 3) == 1)
    assert(ringByRind(1, 4) == 2)
    assert(ringByRind(1, 5) == 2)
    assert(ringByRind(1, 6) == 2)
    assert(ringByRind(1, 7) == 2)
    assert(ringByRind(1, 8) == 2)
    assert(ringByRind(1, 9) == 2)
    assert(ringByRind(1, 10) == 2)
    assert(ringByRind(1, 11) == 2)
    assert(ringByRind(1, 12) == 3)
    assert(ringByRind(1, 13) == 3)
    assert(ringByRind(1, 14) == 3)
    assert(ringByRind(1, 15) == 3)
    assert(ringByRind(1, 16) == 3)
    assert(ringByRind(1, 17) == 3)
    assert(ringByRind(1, 18) == 3)
    assert(ringByRind(1, 19) == 3)
    assert(ringByRind(1, 20) == 4)
    assert(ringByRind(1, 21) == 4)
    assert(ringByRind(1, 22) == 4)
    assert(ringByRind(1, 23) == 4)
    assert(ringByRind(1, 24) == 4)
    assert(ringByRind(1, 25) == 4)
    assert(ringByRind(1, 26) == 4)
    assert(ringByRind(1, 27) == 4)
    assert(ringByRind(1, 28) == 5)
    assert(ringByRind(1, 29) == 5)
    assert(ringByRind(1, 30) == 5)
    assert(ringByRind(1, 31) == 5)
    assert(ringByRind(1, 32) == 5)
    assert(ringByRind(1, 33) == 5)
    assert(ringByRind(1, 34) == 5)
    assert(ringByRind(1, 35) == 5)
    assert(ringByRind(1, 36) == 6)
    assert(ringByRind(1, 37) == 6)
    assert(ringByRind(1, 38) == 6)
    assert(ringByRind(1, 39) == 6)
    assert(ringByRind(1, 40) == 6)
    assert(ringByRind(1, 41) == 6)
    assert(ringByRind(1, 42) == 6)
    assert(ringByRind(1, 43) == 6)
    assert(ringByRind(1, 44) == 7)
    assert(ringByRind(1, 45) == 7)
    assert(ringByRind(1, 46) == 7)
    assert(ringByRind(1, 47) == 7)
  }

  test("Funtion ringByRind at level 2") {
    assert(ringByRind(2, 0) == 1)
    assert(ringByRind(2, 3) == 1)
    assert(ringByRind(2, 4) == 2)
    assert(ringByRind(2, 11) == 2)
    assert(ringByRind(2, 12) == 3)
    assert(ringByRind(2, 23) == 3)
    assert(ringByRind(2, 24) == 4)
    assert(ringByRind(2, 39) == 4)
    assert(ringByRind(2, 40) == 5)
    assert(ringByRind(2, 55) == 5)
    assert(ringByRind(2, 56) == 6)
    assert(ringByRind(2, 71) == 6)
    assert(ringByRind(2, 72) == 7)
    assert(ringByRind(2, 87) == 7)
    assert(ringByRind(2, 88) == 8)
    assert(ringByRind(2, 103) == 8)
    assert(ringByRind(2, 104) == 9)
    assert(ringByRind(2, 119) == 9)
    assert(ringByRind(2, 120) == 10)
    assert(ringByRind(2, 135) == 10)
    assert(ringByRind(2, 136) == 11)
    assert(ringByRind(2, 151) == 11)
    assert(ringByRind(2, 152) == 12)
    assert(ringByRind(2, 167) == 12)
    assert(ringByRind(2, 168) == 13)
    assert(ringByRind(2, 179) == 13)
    assert(ringByRind(2, 180) == 14)
    assert(ringByRind(2, 187) == 14)
    assert(ringByRind(2, 188) == 15)
    assert(ringByRind(2, 191) == 15)
  }

  test("Funtion pxirByRind at level 0") {
    assert(pxirByRind(0, 0) == 1)
    assert(pxirByRind(0, 1) == 2)
    assert(pxirByRind(0, 2) == 3)
    assert(pxirByRind(0, 3) == 4)
    assert(pxirByRind(0, 4) == 1)
    assert(pxirByRind(0, 5) == 2)
    assert(pxirByRind(0, 6) == 3)
    assert(pxirByRind(0, 7) == 4)
    assert(pxirByRind(0, 8) == 1)
    assert(pxirByRind(0, 9) == 2)
    assert(pxirByRind(0, 10) == 3)
    assert(pxirByRind(0, 11) == 4)
  }

  test("Funtion pxirByRind at level 1") {
    assert(pxirByRind(1, 0) == 1)
    assert(pxirByRind(1, 1) == 2)
    assert(pxirByRind(1, 2) == 3)
    assert(pxirByRind(1, 3) == 4)
    assert(pxirByRind(1, 4) == 1)
    assert(pxirByRind(1, 5) == 2)
    assert(pxirByRind(1, 6) == 3)
    assert(pxirByRind(1, 7) == 4)
    assert(pxirByRind(1, 8) == 5)
    assert(pxirByRind(1, 9) == 6)
    assert(pxirByRind(1, 10) == 7)
    assert(pxirByRind(1, 11) == 8)
    assert(pxirByRind(1, 12) == 1)
    assert(pxirByRind(1, 13) == 2)
    assert(pxirByRind(1, 14) == 3)
    assert(pxirByRind(1, 15) == 4)
    assert(pxirByRind(1, 16) == 5)
    assert(pxirByRind(1, 17) == 6)
    assert(pxirByRind(1, 18) == 7)
    assert(pxirByRind(1, 19) == 8)
    assert(pxirByRind(1, 20) == 1)
    assert(pxirByRind(1, 21) == 2)
    assert(pxirByRind(1, 22) == 3)
    assert(pxirByRind(1, 23) == 4)
    assert(pxirByRind(1, 24) == 5)
    assert(pxirByRind(1, 25) == 6)
    assert(pxirByRind(1, 26) == 7)
    assert(pxirByRind(1, 27) == 8)
    assert(pxirByRind(1, 28) == 1)
    assert(pxirByRind(1, 29) == 2)
    assert(pxirByRind(1, 30) == 3)
    assert(pxirByRind(1, 31) == 4)
    assert(pxirByRind(1, 32) == 5)
    assert(pxirByRind(1, 33) == 6)
    assert(pxirByRind(1, 34) == 7)
    assert(pxirByRind(1, 35) == 8)
    assert(pxirByRind(1, 36) == 1)
    assert(pxirByRind(1, 37) == 2)
    assert(pxirByRind(1, 38) == 3)
    assert(pxirByRind(1, 39) == 4)
    assert(pxirByRind(1, 40) == 5)
    assert(pxirByRind(1, 41) == 6)
    assert(pxirByRind(1, 42) == 7)
    assert(pxirByRind(1, 43) == 8)
    assert(pxirByRind(1, 44) == 1)
    assert(pxirByRind(1, 45) == 2)
    assert(pxirByRind(1, 46) == 3)
    assert(pxirByRind(1, 47) == 4)
  }

  test("Funtion pxirByRind at level 2") {
    assert(pxirByRind(2, 0) == 1)
    assert(pxirByRind(2, 3) == 4)
    assert(pxirByRind(2, 4) == 1)
    assert(pxirByRind(2, 11) == 8)
    assert(pxirByRind(2, 12) == 1)
    assert(pxirByRind(2, 23) == 12)
    assert(pxirByRind(2, 24) == 1)
    assert(pxirByRind(2, 39) == 16)
    assert(pxirByRind(2, 40) == 1)
    assert(pxirByRind(2, 55) == 16)
    assert(pxirByRind(2, 56) == 1)
    assert(pxirByRind(2, 71) == 16)
    assert(pxirByRind(2, 72) == 1)
    assert(pxirByRind(2, 87) == 16)
    assert(pxirByRind(2, 88) == 1)
    assert(pxirByRind(2, 103) == 16)
    assert(pxirByRind(2, 104) == 1)
    assert(pxirByRind(2, 119) == 16)
    assert(pxirByRind(2, 120) == 1)
    assert(pxirByRind(2, 135) == 16)
    assert(pxirByRind(2, 136) == 1)
    assert(pxirByRind(2, 151) == 16)
    assert(pxirByRind(2, 152) == 1)
    assert(pxirByRind(2, 167) == 16)
    assert(pxirByRind(2, 168) == 1)
    assert(pxirByRind(2, 179) == 12)
    assert(pxirByRind(2, 180) == 1)
    assert(pxirByRind(2, 187) == 8)
    assert(pxirByRind(2, 188) == 1)
    assert(pxirByRind(2, 191) == 4)
  }

}
